// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SinhalaTutorial.DataAccess;

#nullable disable

namespace SinhalaTutorial.DataAccess.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    partial class TodoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.5.22302.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SinhalaTutorial.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"), 1L, 1);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            FullName = "Ishara Perera"
                        },
                        new
                        {
                            AuthorId = 2,
                            FullName = "Ashan Nishantha"
                        },
                        new
                        {
                            AuthorId = 3,
                            FullName = "Suranjith Geeshan"
                        },
                        new
                        {
                            AuthorId = 4,
                            FullName = "Lahiru Mudalige"
                        },
                        new
                        {
                            AuthorId = 5,
                            FullName = "Rachitha Wathsala"
                        });
                });

            modelBuilder.Entity("SinhalaTutorial.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Due")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 3,
                            Created = new DateTime(2022, 7, 4, 19, 8, 30, 835, DateTimeKind.Local).AddTicks(3300),
                            Description = "Learn ASP.NET Sinhala Tutorial",
                            Due = new DateTime(2022, 7, 8, 19, 8, 30, 835, DateTimeKind.Local).AddTicks(3315),
                            Status = 0,
                            Title = "ASP.NET"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Created = new DateTime(2022, 7, 4, 19, 8, 30, 835, DateTimeKind.Local).AddTicks(3326),
                            Description = "Learn Python",
                            Due = new DateTime(2022, 7, 8, 19, 8, 30, 835, DateTimeKind.Local).AddTicks(3327),
                            Status = 2,
                            Title = "Python"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            Created = new DateTime(2022, 7, 4, 19, 8, 30, 835, DateTimeKind.Local).AddTicks(3329),
                            Description = "Learn Angular Tutorial",
                            Due = new DateTime(2022, 7, 8, 19, 8, 30, 835, DateTimeKind.Local).AddTicks(3330),
                            Status = 0,
                            Title = "Angular"
                        });
                });

            modelBuilder.Entity("SinhalaTutorial.Models.Todo", b =>
                {
                    b.HasOne("SinhalaTutorial.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
